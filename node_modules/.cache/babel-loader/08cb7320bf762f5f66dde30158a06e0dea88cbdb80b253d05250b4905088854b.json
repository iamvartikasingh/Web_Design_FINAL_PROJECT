{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Himank\\\\Desktop\\\\Patient Dashboard\\\\src\\\\components\\\\ActivityTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\nconst ActivityTracker = () => {\n  _s();\n  const [timeRange, setTimeRange] = useState(\"daily\");\n  const getData = () => {\n    switch (timeRange) {\n      case \"weekly\":\n        return {\n          labels: [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"],\n          datasets: [{\n            label: \"Mood\",\n            data: [7, 6, 8, 7],\n            borderColor: \"#fff\",\n            fill: false\n          }, {\n            label: \"Sleep (Hours)\",\n            data: [7.5, 8, 7, 6.5],\n            borderColor: \"#ccc\",\n            fill: false\n          }]\n        };\n      case \"monthly\":\n        return {\n          labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\"],\n          datasets: [{\n            label: \"Mood\",\n            data: [7, 6.5, 8, 7.5],\n            borderColor: \"#fff\",\n            fill: false\n          }, {\n            label: \"Sleep (Hours)\",\n            data: [7.5, 8, 7.2, 6.8],\n            borderColor: \"#ccc\",\n            fill: false\n          }]\n        };\n      default:\n        return {\n          labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n          datasets: [{\n            label: \"Mood\",\n            data: [6, 7, 8, 5, 9, 7, 8],\n            borderColor: \"#fff\",\n            fill: false\n          }, {\n            label: \"Sleep (Hours)\",\n            data: [7, 8, 6, 8, 9, 7, 6],\n            borderColor: \"#ccc\",\n            fill: false\n          }]\n        };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"fw-bold mb-3\",\n      children: \"Activity Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-light\",\n        onClick: () => setTimeRange(\"daily\"),\n        children: \"Daily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-light\",\n        onClick: () => setTimeRange(\"weekly\"),\n        children: \"Weekly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-light\",\n        onClick: () => setTimeRange(\"monthly\"),\n        children: \"Monthly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: getData(),\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: \"#fff\"\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivityTracker, \"+Kc+5JG/2NmG/YrqvBlyJ8F7hJI=\");\n_c = ActivityTracker;\nexport default ActivityTracker;\nvar _c;\n$RefreshReg$(_c, \"ActivityTracker\");","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","ActivityTracker","_s","timeRange","setTimeRange","getData","labels","datasets","label","data","borderColor","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","options","plugins","legend","color","_c","$RefreshReg$"],"sources":["C:/Users/Himank/Desktop/Patient Dashboard/src/components/ActivityTracker.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\r\n\r\nconst ActivityTracker = () => {\r\n  const [timeRange, setTimeRange] = useState(\"daily\");\r\n\r\n  const getData = () => {\r\n    switch (timeRange) {\r\n      case \"weekly\":\r\n        return {\r\n          labels: [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"],\r\n          datasets: [\r\n            { label: \"Mood\", data: [7, 6, 8, 7], borderColor: \"#fff\", fill: false },\r\n            { label: \"Sleep (Hours)\", data: [7.5, 8, 7, 6.5], borderColor: \"#ccc\", fill: false },\r\n          ],\r\n        };\r\n      case \"monthly\":\r\n        return {\r\n          labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\"],\r\n          datasets: [\r\n            { label: \"Mood\", data: [7, 6.5, 8, 7.5], borderColor: \"#fff\", fill: false },\r\n            { label: \"Sleep (Hours)\", data: [7.5, 8, 7.2, 6.8], borderColor: \"#ccc\", fill: false },\r\n          ],\r\n        };\r\n      default:\r\n        return {\r\n          labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n          datasets: [\r\n            { label: \"Mood\", data: [6, 7, 8, 5, 9, 7, 8], borderColor: \"#fff\", fill: false },\r\n            { label: \"Sleep (Hours)\", data: [7, 8, 6, 8, 9, 7, 6], borderColor: \"#ccc\", fill: false },\r\n          ],\r\n        };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-white\">\r\n      <h5 className=\"fw-bold mb-3\">Activity Tracker</h5>\r\n      <div className=\"btn-group mb-3\">\r\n        <button className=\"btn btn-outline-light\" onClick={() => setTimeRange(\"daily\")}>\r\n          Daily\r\n        </button>\r\n        <button className=\"btn btn-outline-light\" onClick={() => setTimeRange(\"weekly\")}>\r\n          Weekly\r\n        </button>\r\n        <button className=\"btn btn-outline-light\" onClick={() => setTimeRange(\"monthly\")}>\r\n          Monthly\r\n        </button>\r\n      </div>\r\n      <Line data={getData()} options={{ plugins: { legend: { labels: { color: \"#fff\" } } } }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}