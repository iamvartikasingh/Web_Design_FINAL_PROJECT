{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Himank\\\\Desktop\\\\Patient Dashboard\\\\src\\\\components\\\\MedicationReminder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedicationReminder = () => {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [reminder, setReminder] = useState(\"\");\n  const addReminder = () => {\n    if (reminder) {\n      setReminders([...reminders, reminder]);\n      setReminder(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: \"Medication Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group mb-3\",\n        children: reminders.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-3\",\n        placeholder: \"Add a new reminder\",\n        value: reminder,\n        onChange: e => setReminder(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: addReminder,\n        children: \"Add Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicationReminder, \"q1J6JxGiZZN2LyY03WPQ9FPf+lY=\");\n_c = MedicationReminder;\nexport default MedicationReminder;\nvar _c;\n$RefreshReg$(_c, \"MedicationReminder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MedicationReminder","_s","reminders","setReminders","reminder","setReminder","addReminder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Himank/Desktop/Patient Dashboard/src/components/MedicationReminder.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst MedicationReminder = () => {\r\n  const [reminders, setReminders] = useState([]);\r\n  const [reminder, setReminder] = useState(\"\");\r\n\r\n  const addReminder = () => {\r\n    if (reminder) {\r\n      setReminders([...reminders, reminder]);\r\n      setReminder(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Medication Reminder</h5>\r\n        <ul className=\"list-group mb-3\">\r\n          {reminders.map((item, index) => (\r\n            <li className=\"list-group-item\" key={index}>\r\n              {item}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-3\"\r\n          placeholder=\"Add a new reminder\"\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.target.value)}\r\n        />\r\n        <button className=\"btn btn-primary\" onClick={addReminder}>\r\n          Add Reminder\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicationReminder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIF,QAAQ,EAAE;MACZD,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEE,QAAQ,CAAC,CAAC;MACtCC,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKQ,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBT,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBT,OAAA;QAAIQ,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnDb,OAAA;QAAIQ,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC5BN,SAAS,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBhB,OAAA;UAAIQ,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC5BM;QAAI,GAD8BC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEtC,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLb,OAAA;QACEiB,IAAI,EAAC,MAAM;QACXT,SAAS,EAAC,mBAAmB;QAC7BU,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAEd,QAAS;QAChBe,QAAQ,EAAGC,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFb,OAAA;QAAQQ,SAAS,EAAC,iBAAiB;QAACe,OAAO,EAAEhB,WAAY;QAAAE,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CAnCID,kBAAkB;AAAAuB,EAAA,GAAlBvB,kBAAkB;AAqCxB,eAAeA,kBAAkB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}