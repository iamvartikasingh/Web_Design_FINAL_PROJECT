{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Himank\\\\Desktop\\\\Patient Dashboard\\\\src\\\\components\\\\DailyJournal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, CardContent, Typography, TextField, Button, List, ListItem } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyJournal = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [entry, setEntry] = useState(\"\");\n  const addEntry = () => {\n    if (entry) {\n      setEntries([...entries, {\n        text: entry,\n        date: new Date().toLocaleString()\n      }]);\n      setEntry(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      backgroundColor: \"#f5f3f4\",\n      flex: 1,\n      minWidth: \"300px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          marginBottom: \"20px\",\n          color: \"#333333\"\n        },\n        children: \"Daily Journal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: entries.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            backgroundColor: \"#fdfdfd\",\n            marginBottom: \"5px\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: \"#333333\",\n              marginBottom: \"5px\"\n            },\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: entry,\n        onChange: e => setEntry(e.target.value),\n        placeholder: \"Write your journal entry\",\n        multiline: true,\n        rows: 3,\n        fullWidth: true,\n        sx: {\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addEntry,\n        variant: \"contained\",\n        sx: {\n          backgroundColor: \"#333333\",\n          color: \"#ffffff\"\n        },\n        children: \"Add Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyJournal, \"W5k3QTbsOnzhlWEYjXzCiykAFpA=\");\n_c = DailyJournal;\nexport default DailyJournal;\nvar _c;\n$RefreshReg$(_c, \"DailyJournal\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","TextField","Button","List","ListItem","jsxDEV","_jsxDEV","DailyJournal","_s","entries","setEntries","entry","setEntry","addEntry","text","date","Date","toLocaleString","sx","backgroundColor","flex","minWidth","children","variant","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","flexDirection","value","onChange","e","target","placeholder","multiline","rows","fullWidth","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Himank/Desktop/Patient Dashboard/src/components/DailyJournal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Card, CardContent, Typography, TextField, Button, List, ListItem } from \"@mui/material\";\r\n\r\nconst DailyJournal = () => {\r\n  const [entries, setEntries] = useState([]);\r\n  const [entry, setEntry] = useState(\"\");\r\n\r\n  const addEntry = () => {\r\n    if (entry) {\r\n      setEntries([...entries, { text: entry, date: new Date().toLocaleString() }]);\r\n      setEntry(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ backgroundColor: \"#f5f3f4\", flex: 1, minWidth: \"300px\" }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" sx={{ marginBottom: \"20px\", color: \"#333333\" }}>\r\n          Daily Journal\r\n        </Typography>\r\n        <List>\r\n          {entries.map((item, index) => (\r\n            <ListItem key={index} sx={{ backgroundColor: \"#fdfdfd\", marginBottom: \"5px\", flexDirection: \"column\" }}>\r\n              <Typography variant=\"body2\" sx={{ color: \"#333333\", marginBottom: \"5px\" }}>\r\n                {item.date}\r\n              </Typography>\r\n              <Typography>{item.text}</Typography>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <TextField\r\n          value={entry}\r\n          onChange={(e) => setEntry(e.target.value)}\r\n          placeholder=\"Write your journal entry\"\r\n          multiline\r\n          rows={3}\r\n          fullWidth\r\n          sx={{ marginBottom: \"10px\" }}\r\n        />\r\n        <Button onClick={addEntry} variant=\"contained\" sx={{ backgroundColor: \"#333333\", color: \"#ffffff\" }}>\r\n          Add Entry\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DailyJournal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}